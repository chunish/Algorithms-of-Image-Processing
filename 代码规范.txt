### 部分代码规范问题

1	"头文件及实现文件必须添加法律声明、文件名、作者、版本、创建时间、描述及修改历史，模版如下：
/**********************************************************************
* Copyright (C) 2017 YIHUA COMPUTER CO.,LTD.
* 文 件 名: XX.h/XX.cpp/XX.c
* 作    者: XXXX
* 版    本: XX
* 创建时间: XXXX.XX.XX
* 描    述: XXXXXXXXXXXXXXXXXX
* 修改历史: 
* <作 者>    <时 间>    <版 本>      <描 述>
*  XXXX    XXXX-XX-XX    1.0         build.
**********************************************************************/"
2	"函数头部应进行注释，列出：函数名称、功能、作者、完成日期、输入参数、输出参数、返回值等,例如：
/**********************************************************************
* 函数名称: XXXX
* 功能描述: XXXX
* 作    者: XXXX
* 完成日期: XXXX-XX-XX
* 输入参数: XX XX
* 输出参数: XX
* 返 回 值: XX
**********************************************************************/"
3	在程序块的结束行右方加注释标记，以表明某程序块的结束
4	分支语句（条件分支、循环语句等）必须编写注释应写清楚详细的注释
5	注释应位于其描述的代码附近，放在其上方或右方，避免在一行代码或表达式的中间插入注释
6	注释都统一使用/* */，单行注释可以使用双斜杠
7	程序中禁止使用魔法数字，必要时需要对魔法数字进行注释
8	使用“==”时要把变量放在后面，防止发生赋值情况
9	不可将浮点变量用“==”或“！=”与任何数字比较
10	应当将指针变量用“==”或“！=”与NULL 比较，且NULL放在前面
11	宏定义中的参数需要加括号
12	错误码用宏或枚举定义，且后面必须带有注释
13	禁止在变量名字中出现数字编号，如Value1,Value2 等。
14	禁止使用单个字符定义变量（循环变量除外）
15	函数或者变量名都用英文，不能出现拼音或者英文和拼音混合
16	“，”和“；”只在后面加空格。
17	双目操作符的前后都加空格
18	变量声明定义时“=”要对齐
19	变量声明定义的同时要初始化
20	变量等声明要放在函数的开始
21	结构体初始化的时候不能赋值为变量
22	void型函数避免带返回值
23	针对除数要先进行非零判断
24	函数或文件命名：遵循动词+名词，单词首字母大写
25	图像命名规则：遵循《图像命名规则表》
26	变量命名：遵循《变量命名规则表》
27	变量识别名及函数名采用“大小写”混排的方式（Windows风格），常量全用大写的字母，用下划线分割单词。如usCountryInfo、AddChild();const int MAX_LENGTH = 100;
28	应当将修饰符 * 和＆ 紧靠变量名,如:char *pcName;
29	"用正确的反义词组命名具有互斥意义的变量或相反动作的函数等
int MinValue;int MaxValue;
int SetValue(…);int GetValue(…);"
30	if、for、do、while、case、switch、default等关键字语句自占一行
31	if、for、do、while、case、switch、default执行语句要加大括号{}，大括号也占一行
32	switch语句中的每个case之间空一行，且后面必须有break，若是多个case条件的，需要注释说明
33	不要忘记最后那个default分支。即使程序真的不需要default处理，也应该保留语句 default : break;
34	不可在for循环体内修改循环变量，防止for 循环失去控制
35	do……While（1）…… 循环，必须每个分支要break出来
36	有较长的表达式或语句，要进行适应当的分多行划分
37	函数声明中，输入参数在前，输出参数在后，且逻辑相关的参数应紧密放置
38	数组和动态内存需要赋初值,例如对于一个内存块，使用前可用memset()进行“清0”处理。
39	如果循环体内存在逻辑判断，并且循环次数很大，宜将逻辑判断移到循环体的外面
40	函数长度控制在100行以内
41	一行只能写一条语句
42	枚举币值、面向变量等时，要使枚举的值连续，可以在最后加一个最大值，以便于扩展
43	枚举变量最后一个不能添加逗号
44	一个函数只完成一个功能
45	重复率较高的代码要封装成函数
46	取特征区域的位置要封装到一个函数中
47	修改代码同时修改相应的注释，以保证注释与代码的一致性
48	独立功能的程序块或不同函数实现之间用空行分隔，函数体内逻辑上密切相关的语句之间不加空行,其它地方需要增加空行分隔
49	函数内部应当根据代码段的功能，分步骤注释
50	函数或算法返回值只用来表示程序是否正确执行，定义成宏（0表示正确，非0表示错误）不要返回数值
51	图像二值化时，使用宏定义（背景设置为0，目标设置为1或255）
52	对图像邻域进行操作，小心越界，特别要当心发生“多1”或者“少1”操作
53	for循环中，循环终止条件数值需要进行合理性判断，防止数值过大、循环次数过多
54	while循环小心越界
55	检查访问数组的下标是否在合理范围内
56	注意避免发生申请的内存小于使用的内存大小
57	堆栈空间要注意大小，申明的内存空间要在合理范围内
58	值不改变的变量要加ALG_CONST修饰
59	提交移植代码版本要删除无用的函数，变量等，方便移植；例如调试用的保存图像的函数等
60	对接口函数中的一些公共接口，要检查输入是否合法
61	每个函数必须在对应的.h文件中定义原型
62	使用malloc或new申请动态内存后一定要在当前层释放
63	用free 或delete 释放了内存之后，立即将指针设置为NULL，防止产生“野指针”。
64	用malloc或new申请内存之后，应该立即检查指针值是否为NULL，防止使用指针值为NULL的内存
65	当调用子函数引起参数值改变时，可以在调用结束时说明
66	.h文件中的布局从上到下应遵循宏定义->枚举变量->结构体->声明的顺序;
67	当定义的变量大小与分辨率有关时，需要将分辨率大小考虑进去
68	使用求绝对值函数abs需注意两边定义类型是否一致，对浮点数运算且有精度要求时必须使用fabs
69	程序中不要出现标识符完全相同的局部变量和全局变量
70	在头文件中，为了防止头文件被重复引用，应当用#ifndef/#define/#endif 结构产生预处理块，C++编译环境可以使用#pragma once
71	"如果代码行中的运算符比较多，用括号确定表达式的操作顺序，避免使用默认的优先级，例如：
word = (high << 8) | low
if ((a | b) && (a & c))"
72	"用#include <filename.h> 格式来引用标准库的头文件（编译器将从标准库目录开始搜索）。
用#include ""filename.h"" 格式来引用非标准库的头文件（编译器将从用户的工作目录开始搜索）。"
